generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id           Int           @id @default(autoincrement())
  name         String
  type         String
  transactions Transaction[]
}

model Transaction {
  id         Int      @id @default(autoincrement())
  value      Int
  createdAt  DateTime @default(now()) @map("created_at")
  categoryId Int
  billId     Int
  bill       Bill     @relation(fields: [billId], references: [id], onDelete: Cascade)
  category   Category @relation(fields: [categoryId], references: [id])
}

model Bill {
  id           Int           @id @default(autoincrement())
  type         String
  status       String
  date         DateTime
  createdAt    DateTime      @default(now()) @map("created_at")
  userId       Int
  currencyId   Int
  accountId    Int
  account      Account       @relation(fields: [accountId], references: [id], onDelete: Cascade)
  currency     Currency      @relation(fields: [currencyId], references: [id])
  user         User          @relation(fields: [userId], references: [id])
  transactions Transaction[]
}

model User {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  password String
  accounts Account[]
  bills    Bill[]
}

model Account {
  id         Int      @id @default(autoincrement())
  name       String
  ownerId    Int
  currencyId Int
  currency   Currency @relation(fields: [currencyId], references: [id])
  user       User     @relation(fields: [ownerId], references: [id])
  bills      Bill[]
}

model Currency {
  id       Int       @id @default(autoincrement())
  name     String
  code     String
  accounts Account[]
  bills    Bill[]
}
